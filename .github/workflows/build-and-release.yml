name: Build and Release for Linux

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgl1-mesa-glx \
          libxkbcommon-x11-0 \
          libxcb-xinerama0 \
          libxcb-cursor0 \
          libxcb-randr0 \
          libxcb-xtest0 \
          libxcb-xfixes0 \
          libxcb-shape0 \
          libxcb-sync1 \
          libxcb-render-util0 \
          libxcb-icccm4 \
          libxcb-keysyms1 \
          libxcb-image0 \
          libxcb1 \
          libx11-6 \
          xvfb
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build with PyInstaller
      run: |
        # Crear el ejecutable con PyInstaller
        pyinstaller --onefile \
          --windowed \
          --name ssh-tunnel-manager \
          --icon=icons/tunnel.png \
          --add-data "icons:icons" \
          --add-data "*.ui:." \
          --hidden-import PyQt5.QtCore \
          --hidden-import PyQt5.QtGui \
          --hidden-import PyQt5.QtWidgets \
          app.py
    
    - name: Create archive
      run: |
        cd dist
        tar -czf ssh-tunnel-manager-linux-x64.tar.gz ssh-tunnel-manager
    
    - name: Get version from tag
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION="dev-$(date +%Y%m%d-%H%M%S)"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/ssh-tunnel-manager-linux-x64.tar.gz
          dist/ssh-tunnel-manager
        name: SSH Tunnel Manager ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## SSH Tunnel Manager ${{ steps.get_version.outputs.VERSION }}
          
          ### Descarga para Linux
          - **ssh-tunnel-manager-linux-x64.tar.gz**: Archivo comprimido con el ejecutable
          - **ssh-tunnel-manager**: Ejecutable directo para Linux x64
          
          ### Instalación
          1. Descarga el archivo `ssh-tunnel-manager`
          2. Dale permisos de ejecución: `chmod +x ssh-tunnel-manager`
          3. Ejecuta: `./ssh-tunnel-manager`
          
          ### Requisitos del sistema
          - Linux x64
          - Librerías Qt5 (generalmente ya instaladas)
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload artifacts (for non-tag builds)
      if: "!startsWith(github.ref, 'refs/tags/')"
      uses: actions/upload-artifact@v4
      with:
        name: ssh-tunnel-manager-linux-dev
        path: |
          dist/ssh-tunnel-manager-linux-x64.tar.gz
          dist/ssh-tunnel-manager
